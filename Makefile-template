CC:=gcc
CFLAGS:=-std=c99 -Wall -Wextra
LDFLAGS:=

TEST_CFLAGS:=$(CFLAGS) -Idist/include
TEST_LDFLAGS:=$(LDFLAGS) -Ldist/lib

STACK_TESTS := test/test-Stack-1 test/test-Stack-2

.PHONY: default clean tests distro libcini configure

default: tests

configure:
	$(PDIR)/configure

clean: tests-clean distro-clean libcini-clean

tests: distro test test/sugo $(STACK_TESTS)

tests-clean:
	rm -rf test

test:
	mkdir test

test/sugo: $(PDIR)/test/sugo.c $(PDIR)/test/sugo.h
	$(CC) -o $@ $<

test/test-Stack-%: $(PDIR)/test/test-Stack-%.c dist/include/cini/Stack.h $(PDIR)/test/sugo.h dist/lib/libcini.a
	$(CC) -o $@ $(TEST_CFLAGS) $(TEST_LDFLAGS) $< -lcini

DISTRO_INCLUDES:=dist/include/cini/Stack.h
DISTRO_LIBS:=dist/lib/libcini.a

distro: libcini dist $(DISTRO_INCLUDES) $(DISTRO_LIBS)

distro-clean:
	rm -rf dist

dist:
	mkdir dist
	mkdir dist/include
	mkdir dist/include/cini
	mkdir dist/lib

dist/include/cini/%.h: $(PDIR)/src/%.h
	cp $< $@

dist/lib/%.a: src/%.a
	cp $< $@

OBJECTS:=src/Stack.o

libcini: src src/libcini.a

libcini-clean:
	rm -rf src

src:
	mkdir src

src/libcini.a: $(OBJECTS)
	ar -c -r $@ $^

src/%.o: $(PDIR)/src/%.c $(PDIR)/src/%.h
	$(CC) -c -o $@ $(CFLAGS) $<
